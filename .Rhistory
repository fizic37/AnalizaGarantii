install.packages("processx")
install.packages("processx")
golem::add_shinyserver_file()
renv::init()
renv::install("processx@3.7.0")
renv::snapshot()
renv::install("golem@0.3.3")
renv::install("xfun")
renv::snapshot()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
golem::add_module("crc",with_test = TRUE)
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
golem::add_dockerfile()
golem::add_shinyserver_file()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
golem::add_module("crc_new",open = T,with_test = F)
runApp()
runApp()
runApp()
runApp()
runApp()
usethis::use_pipe()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
## Run checks ----
## Check the package before sending to prod
devtools::check()
runApp()
runApp()
## Run checks ----
## Check the package before sending to prod
devtools::check()
golem::add_dockerfile()
## Run checks ----
## Check the package before sending to prod
devtools::check()
## Create Common Files ----
## See ?usethis for more information
usethis::use_mit_license( "Marius Tita" )  # You can set another license here
usethis::use_package("stringr")
## Fill the DESCRIPTION ----
## Add meta data about your application
##
## /!\ Note: if you want to change the name of your app during development,
## either re-run this function, call golem::set_golem_name(), or don't forget
## to change the name in the app_sys() function in app_config.R /!\
##
golem::fill_desc(
pkg_name = "AnalizaGarantii", # The Name of the package containing the App
pkg_title = "Application for guarantee analysis", # The Title of the package containing the App
pkg_description = "Intended to handle guarantee analysis. The first module implemented is designed to handle CRC processing", # The Description of the package containing the App
author_first_name = "Marius", # Your First Name
author_last_name = "Tita", # Your Last Name
author_email = "marius.tita81@gmail.com", # Your Email
repo_url = NULL # The URL of the GitHub Repo (optional)
)
usethis::use_package("shinyWidgets")
usethis::use_package("dplyr")
## Run checks ----
## Check the package before sending to prod
devtools::check()
## Run checks ----
## Check the package before sending to prod
devtools::check()
usethis::use_package("magrittr")
## Fill the DESCRIPTION ----
## Add meta data about your application
##
## /!\ Note: if you want to change the name of your app during development,
## either re-run this function, call golem::set_golem_name(), or don't forget
## to change the name in the app_sys() function in app_config.R /!\
##
golem::fill_desc(
pkg_name = "AnalizaGarantii", # The Name of the package containing the App
pkg_title = "Application for guarantee analysis", # The Title of the package containing the App
pkg_description = "This package is intended to handle guarantee analysis. The first module implemented is designed to handle CRC processing", # The Description of the package containing the App
author_first_name = "Marius", # Your First Name
author_last_name = "Tita", # Your Last Name
author_email = "marius.tita81@gmail.com", # Your Email
repo_url = NULL # The URL of the GitHub Repo (optional)
)
## Fill the DESCRIPTION ----
## Add meta data about your application
##
## /!\ Note: if you want to change the name of your app during development,
## either re-run this function, call golem::set_golem_name(), or don't forget
## to change the name in the app_sys() function in app_config.R /!\
##
golem::fill_desc(
pkg_name = "AnalizaGarantii", # The Name of the package containing the App
pkg_title = "Application for guarantee analysis", # The Title of the package containing the App
pkg_description = "Intended to handle guarantee analysis. The first module implemented is designed to handle CRC processing", # The Description of the package containing the App
author_first_name = "Marius", # Your First Name
author_last_name = "Tita", # Your Last Name
author_email = "marius.tita81@gmail.com", # Your Email
repo_url = NULL # The URL of the GitHub Repo (optional)
)
## Fill the DESCRIPTION ----
## Add meta data about your application
##
## /!\ Note: if you want to change the name of your app during development,
## either re-run this function, call golem::set_golem_name(), or don't forget
## to change the name in the app_sys() function in app_config.R /!\
##
golem::fill_desc(
pkg_name = "AnalizaGarantii", # The Name of the package containing the App
pkg_title = "Application for guarantee analysis", # The Title of the package containing the App
pkg_description = "Intended to handle guarantee analysis. The first module implemented is designed to handle CRC processing", # The Description of the package containing the App
author_first_name = "Marius", # Your First Name
author_last_name = "Tita", # Your Last Name
author_email = "marius.tita81@gmail.com", # Your Email
repo_url = "https://github.com/fizic37/AnalizaGarantii" # The URL of the GitHub Repo (optional)
)
## Run checks ----
## Check the package before sending to prod
devtools::check()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
rlang::last_error()
install.packages("golem")
runApp()
